---
import type { Post } from '../types';
const { posts } = Astro.props;
const base = import.meta.env.BASE_URL;
---

<section class="featured-posts">
  <div class="slider-container">
    <div class="slider-track" id="sliderTrack" data-total={posts.length}>
      {posts.map((post, index) => (
        <div class="slide" key={index}>
          <a href={`/blog/${post.slug}`}>
            {post.data.image && (
              <img src={`${base}${post.data.image}`} alt={post.data.title} />
            )}
            <div class="caption">
              <h3>{post.data.title}</h3>
            </div>
          </a>
        </div>
      ))}
    </div>

    <div class="slider-dots">
      {posts.map((_, index) => (
        <button class="dot" data-index={index} key={index}></button>
      ))}
    </div>

    <button class="slider-arrow left" id="prevBtn">←</button>
    <button class="slider-arrow right" id="nextBtn">→</button>
  </div>
</section>

<style>
  .featured-posts {
    margin-top: 4rem;
  }

  .section-title {
    font-size: 1.5rem;
    font-weight: bold;
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .slider-container {
    position: relative;
    overflow: hidden;
    width: 100%;
    height: 240px;
  }

  .slider-track {
    display: flex;
    transition: transform 0.5s ease-in-out;
    width: 100%;
    height: 100%;
  }

  .slide {
    min-width: 100%;
    height: 240px;
    position: relative;
    flex-shrink: 0;
  }

  .slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .caption {
    position: absolute;
    bottom: 10px;
    left: 15px;
    color: white;
    background: rgba(0, 0, 0, 0.5);
    padding: 0.5rem 1rem;
    border-radius: 4px;
  }

  .slider-dots {
    position: absolute;
    bottom: 10px;
    right: 15px;
    display: flex;
    gap: 8px;
    z-index: 3;
  }

  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: none;
    background: rgba(255, 255, 255, 0.5);
    cursor: pointer;
  }

  .dot.active {
    background: white;
  }

  .slider-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0,0,0,0.5);
    color: white;
    border: none;
    font-size: 1.2rem;
    padding: 0.4rem 0.6rem;
    cursor: pointer;
    z-index: 3;
    border-radius: 50%;
  }

  .slider-arrow.left {
    left: 10px;
  }

  .slider-arrow.right {
    right: 10px;
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const track = document.getElementById('sliderTrack');
    const dots = document.querySelectorAll('.dot');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const total = Number(track?.dataset.total || 0);
    let currentIndex = 0;

    function updateSlider() {
      if (!track) return;
      track.style.transform = `translateX(-${currentIndex * 100}%)`;

      dots.forEach((dot, i) => {
        dot.classList.toggle('active', i === currentIndex);
      });
    }

    dots.forEach((dot) => {
      dot.addEventListener('click', (e) => {
        const index = Number(e.target.getAttribute('data-index'));
        currentIndex = index;
        updateSlider();
      });
    });

    prevBtn?.addEventListener('click', () => {
      currentIndex = (currentIndex - 1 + total) % total;
      updateSlider();
    });

    nextBtn?.addEventListener('click', () => {
      currentIndex = (currentIndex + 1) % total;
      updateSlider();
    });

    updateSlider();

    setInterval(() => {
      currentIndex = (currentIndex + 1) % total;
      updateSlider();
    }, 5000);
  });
</script>
